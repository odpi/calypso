---
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project

# To run
#   * Ensure Docker is installed
#   * Start the tutorial stack using
#     'docker-compose -f ./egeria-tutorial.yaml up'
#   * starts 3 egeria serves, kafka, zookeeper & jupyter notebook
#   * Go to notebook at http://localhost:18888
#
# See the following link for more info on volumes & why we need to use root:
#   https://docs.bitnami.com/containers/how-to/work-with-non-root-containers/

version: '3.7'

services:

    zookeeper:
        image: 'bitnami/zookeeper:latest'
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        ports:
            - '12181:2181'
        networks:
            - cocopharma
        volumes:
            - zookeeper-data:/bitnami/zookeeper

    kafka:
        depends_on:
            - zookeeper
        image: 'bitnami/kafka:latest'
        environment:
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS=180000
        ports:
            - '19092:9092'
        networks:
            - cocopharma
        volumes:
            - kafka-data:/bitnami/kafka

    notebook:
        image: '${egeria_repo}/jupyter:${egeria_version}'
        environment:
            - JUPYTER_ENABLE_LAB=yes
            - corePlatformURL=https://core:9443
            - dataLakePlatformURL=https://datalake:9443
            - devPlatformURL=https://dev:9443
            - ctsPlatformURL=https://dev:9443
            - factoryPlatformURL=https://factory:9443
            - eventBusURLroot=kafka:9092
            - uiExternalURL=https://localhost:18443
        command: start.sh jupyter lab --LabApp.token='' --NotebookApp.iopub_data_rate_limit=1.0e10
        ports:
            - '18888:8888'
        depends_on:
            - kafka
            - core
            - dev
            - datalake
            - factory
        networks:
            - cocopharma
        user: root
        env_file:
            - '.env'

    core:
        depends_on:
            - kafka
        image: '${egeria_repo}/egeria:${egeria_version}'
        ports:
            - '19443:9443'
        networks:
            - cocopharma
        env_file:
            - '.env'
        volumes:
            - core-data:/deployments/data

    datalake:
        depends_on:
            - kafka
        image: '${egeria_repo}/egeria:${egeria_version}'
        ports:
            - '19444:9443'
        networks:
            - cocopharma
        env_file:
            - '.env'
        volumes:
            - datalake-data:/deployments/data

    dev:
        depends_on:
            - kafka
        image: '${egeria_repo}/egeria:${egeria_version}'
        ports:
            - '19445:9443'
        networks:
            - cocopharma
        env_file:
            - '.env'
        volumes:
            - dev-data:/deployments/data

    factory:
        depends_on:
            - kafka
        image: '${egeria_repo}/egeria:${egeria_version}'
        ports:
            - '19446:9443'
        networks:
            - cocopharma
        env_file:
            - '.env'
        volumes:
            - factory-data:/deployments/data

    ui:
        depends_on:
            - datalake
            - uistatic
        image: '${egeria_repo}/egeria:${egeria_version}'
        environment:
            - OMAS_SERVER_URL=https://datalake:9443
            - OMAS_SERVER_NAME=cocoMDS4
            - OPEN_LINEAGE_SERVER_URL=https://datalake:9443
            - OPEN_LINEAGE_SERVER_NAME=open-lineage
            - OPEN_LINEAGE_GRAPH_SOURCE=MAIN
            - JAVA_APP_JAR=user-interface/ui-chassis-spring-${egeria_version}.jar
            - ZUUL_ROUTES_UI_URL=http://uistatic:80
        ports:
            - '18443:8443'
        networks:
            cocopharma:
        env_file:
            - '.env'

    uistatic:
        image: '${egeria_repo}/egeria-uistatic:${egeria_version}'
        ports:
            - '10080:80'
        networks:
            cocopharma:
        env_file:
            - '.env'

    presentation:
        depends_on:
            - datalake
        image: '${egeria_repo}/egeria-presentation-server:${egeria_version}'
        environment:
            - EGERIA_PRESENTATIONSERVER_SERVER_coco={"remoteServerName":"cocoView1","remoteURL":"https://datalake:9443"}
        ports:
            - '18091:8091'
        networks:
            cocopharma:
        env_file:
            - '.env'
networks:
    cocopharma:

# These are the persistent volumes used by each of the egeria servers. See the README.md for further information
#
# Change external to true and create volumes manually if you wish to persist between runs
volumes:
    core-data:
        external: false
    datalake-data:
        external: false
    dev-data:
        external: false
    factory-data:
        external: false
    zookeeper-data:
        external: false
    kafka-data:
        external: false
