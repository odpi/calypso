# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "myapp.name" . }}-config
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/name: {{ include "myapp.name" . }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": "{{ if .Values.options.jobs.config.jobdelete }} hook-succeeded , {{ end }} before-hook-creation"

spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "myapp.name" . }}
    spec:
      {{- include "egeria.security" . | nindent 6 }}
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-egeria
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.egeria.version }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          env:
            - name: SERVICE
              value: {{ .Release.Name }}-platform
        - name: wait-for-kafka
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.egeria.version }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          env:
            - name: SERVICE
              value: {{ .Release.Name }}-kafka
      containers:
        - name: initialize
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.egeria.version }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
          command: [ "/bin/bash" ]
          args: [ "/scripts/config-egeria.sh" ]
          volumeMounts:
          - name: scripts-vol
            mountPath: /scripts
      volumes:
        - name: scripts-vol
          configMap:
            name: {{ .Release.Name }}-scripts-configmap
  # Keep trying quite a few times to aid in debugging
  backoffLimit: {{ .Values.options.jobs.config.backOffLimit }}