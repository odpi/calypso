/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Contributors to the ODPi Egeria project.
 */

plugins {
     id 'org.springframework.boot'
 }

repositories {
	mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot'
  	testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    //TODO: readd implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //TODO: implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework:spring-beans'
    //implementation 'javax.validation:validation-api'
    implementation 'org.springframework:spring-context'
    implementation project(':open-metadata-implementation:admin-services:admin-services-server')
    implementation project(':open-metadata-implementation:common-services:ffdc-services')
    implementation project(':open-metadata-implementation:admin-services:admin-services-api')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'
    implementation project(':open-metadata-implementation:adapters:authentication-plugins:http-helper')
    implementation 'org.slf4j:slf4j-api'
    implementation 'jakarta.annotation:jakarta.annotation-api'
    implementation 'org.springframework:spring-core'
    implementation 'org.springdoc:springdoc-openapi-ui'
    implementation 'io.swagger.core.v3:swagger-annotations'
    runtimeOnly project(':open-metadata-implementation:platform-services:platform-services-spring')
    runtimeOnly project(':open-metadata-implementation:admin-services:admin-services-spring')
    runtimeOnly project(':open-metadata-implementation:common-services:ocf-metadata-management:ocf-metadata-spring')
    runtimeOnly project(':open-metadata-implementation:repository-services:repository-services-spring')
    runtimeOnly project(':open-metadata-conformance-suite:open-metadata-conformance-suite-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:asset-consumer:asset-consumer-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:asset-owner:asset-owner-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:discovery-engine:discovery-engine-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:stewardship-action:stewardship-action-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:community-profile:community-profile-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:design-model:design-model-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:data-privacy:data-privacy-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:it-infrastructure:it-infrastructure-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:project-management:project-management-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:dev-ops:dev-ops-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:software-developer:software-developer-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:digital-architecture:digital-architecture-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:digital-service:digital-service-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:data-science:data-science-spring')
    runtimeOnly project(':open-metadata-implementation:governance-servers:discovery-engine-services:discovery-engine-services-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:governance-engine:governance-engine-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:governance-program:governance-program-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:asset-catalog:asset-catalog-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:analytics-modeling:analytics-modeling-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:information-view:information-view-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:subject-area:subject-area-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:data-engine:data-engine-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:glossary-view:glossary-view-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:asset-lineage:asset-lineage-spring')
    runtimeOnly project(':open-metadata-implementation:governance-servers:open-lineage-services:open-lineage-services-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:data-manager:data-manager-spring')
    runtimeOnly project(':open-metadata-implementation:access-services:security-officer:security-officer-spring')
    runtimeOnly project(':open-metadata-implementation:view-services:glossary-author-view:glossary-author-view-spring')
    runtimeOnly project(':open-metadata-implementation:view-services:rex-view:rex-view-spring')
    runtimeOnly project(':open-metadata-implementation:view-services:tex-view:tex-view-spring')
}

description = 'OMAG Server Platform Chassis for Spring'

java {
    withJavadocJar()
}

test {
	useJUnitPlatform()
}
